import os

# Einfache i18n-Tabelle (DE/EN)
I18N = {
    "en": {
        "app.title": "Telegram User State Export",
        "lang.label": "Language",
        "lang.en_name": "English",
        "lang.de_name": "German",
        "field.phone": "Phone (e.g. +49123456789)",
        "field.api_id": "TELEGRAM_API_ID",
        "field.api_hash": "TELEGRAM_API_HASH",
        "field.chat": "Chat/Channel (name or link)",
        "field.session": "Session file (optional)",
        "field.chat_name": "Chat name",
        "field.mode": "Export mode",
        "btn.resolve": "Resolve",
        "status.resolving": "Resolving chat…",
        "status.resolved": "Chat resolved.",
        "field.output_csv": "Output file (.csv)",
        "field.output_ods": "Output file (.ods)",
        "btn.browse": "Browse…",
        "btn.start": "Start",
        "chk.show_api_hash": "Show API hash",
        "status.ready": "Ready.",
        "label.log": "Log",
        "mode.member": "Member (no admin rights)",
        "mode.admin": "Admin (full data)",
        "field.history_limit": "Message history limit",
        "info.admin_note": "Notes: Counting bots works on visible members without admin rights. Exporting full member lists in channels may require admin rights; without admin, only visible members can be read.",
        "info.invite_deferred": "Invite link will be resolved after signing in.",
        "status.count_summary": "Bots: {bots} of {total}",
        "info.fallback_used": "Used message history fallback (approximate, not full participant list).",
        "header.metric": "Metric",
        "header.value": "Value",
        "summary.total": "Total visible members",
        "summary.bots": "Bots",

        "dialog.save_title": "Choose output file",
        "dialog.session_title": "Choose existing session file",
        "filetype.ods": "ODS file",
        "filetype.csv": "CSV file",
        "filetype.session": "Telethon session",
        "filetype.all": "All files",
        "error.missing_title": "Missing input",
        "error.missing_body": "Please fill in all fields.",
        "error.api_id_title": "Invalid API ID",
        "error.api_id_body": "TELEGRAM_API_ID must be a number.",
        "error.api_hash_title": "Invalid API hash",
        "error.api_hash_body": "Please enter the 32-character API hash from my.telegram.org/apps (hex digits only).",
        "error.api_creds_title": "Invalid API credentials",
        "error.api_creds_body": "The API ID/API hash combination is invalid. Check that the API ID is correct and the API hash is copied exactly from my.telegram.org/apps.",
        "error.chat_invalid_title": "Chat not found",
        "error.chat_invalid_body": "Please enter a valid chat/channel username, invite link, or internal link.",
        "login.code_title": "Telegram confirmation",
        "login.code_body": "Please enter the code you received via Telegram:",
        "login.password_title": "Two-factor password",
        "login.password_body": "Please enter your Telegram password:",
        "status.starting": "Starting export…",
        "status.logging_in": "Signing in…",
        "status.validating": "Validating API credentials…",
        "status.valid_ok": "API credentials OK.",
        "status.exporting_members": "Exporting members…",
        "status.done": "Done.",
        "log.using_creds": "Using api_id={api_id}, api_hash={api_hash}, phone={phone}",
        "log.member_summary": "Members: {total}, bots: {bots}, recent: {recent}",
        "log.renamed_output": "Renamed output file to {path}",
        "log.rename_failed": "Could not rename output file: {error}",
        "status.error_title": "Error",
        "status.error_short": "Error.",
        "progress.captured": "{count} users captured…",
        "progress.collecting": "Collecting participants...",
        "progress.participants": "Participants collected: {count}",
        "progress.bots": "Bots counted: {count}",
        "progress.bots_missing": "Unable to enumerate bots without sufficient rights.",
        "progress.recent": "Recent participants counted: {count}",
        "progress.recent_missing": "Unable to enumerate recent members without sufficient rights.",
        "progress.fallback": "No participants via API; scanning messages as fallback...",
        "progress.scanning": "Scanning message activity...",
        "progress.messages_scanned": "Messages scanned: {count}",
        "progress.activity_done": "Activity scan finished after {count} messages",
        "progress.saved_csv": "Saved CSV: {path}",
        "progress.chat_title": "Chat title resolved: {name}",
        "header.username": "Username",
        "header.is_bot": "Is Bot",
        "header.last_seen": "Last Seen",
        "bot.yes": "Yes",
        "bot.no": "No",
        "seen.online": "Online",
        "seen.recently": "Recently",
        "seen.hidden": "Hidden/Not shared",
        "seen.unknown": "Unknown",
    },
    "de": {
        "app.title": "Telegram User State Export",
        "lang.label": "Sprache",
        "lang.en_name": "Englisch",
        "lang.de_name": "Deutsch",
        "field.phone": "Telefon (z.B. +49123456789)",
        "field.api_id": "TELEGRAM_API_ID",
        "field.api_hash": "TELEGRAM_API_HASH",
        "field.chat": "Chat/Kanal (Name oder Link)",
        "field.session": "Session-Datei (optional)",
        "field.chat_name": "Chat-Name",
        "field.mode": "Export-Modus",
        "btn.resolve": "Auflösen",
        "status.resolving": "Chat wird aufgelöst…",
        "status.resolved": "Chat aufgelöst.",
        "field.output_csv": "Ausgabedatei (.csv)",
        "field.output_ods": "Ausgabedatei (.ods)",
        "btn.browse": "Durchsuchen…",
        "btn.start": "Start",
        "chk.show_api_hash": "API-Hash anzeigen",
        "status.ready": "Bereit.",
        "label.log": "Log",
        "mode.member": "Mitglied (ohne Admin-Rechte)",
        "mode.admin": "Admin (vollständige Daten)",
        "field.history_limit": "Nachrichtenlimit für Aktivität",
        "info.admin_note": "Hinweise: Das Zählen von Bots funktioniert ohne Admin-Rechte auf den sichtbaren Mitgliedern. Das vollständige Auslesen von Mitgliederlisten in Channels kann Admin-Rechte erfordern; ohne Admin werden nur sichtbare Mitglieder gelesen.",
        "info.invite_deferred": "Invite-Link wird nach der Anmeldung aufgelöst.",
        "status.count_summary": "Bots: {bots} von {total}",
        "info.fallback_used": "Nachrichten-Historie als Fallback genutzt (Näherung, keine vollständige Mitgliederliste).",
        "header.metric": "Metrik",
        "header.value": "Wert",
        "summary.total": "Sichtbare Mitglieder gesamt",
        "summary.bots": "Bots",

        "dialog.save_title": "Ausgabedatei wählen",
        "dialog.session_title": "Vorhandene Session-Datei wählen",
        "filetype.ods": "ODS Datei",
        "filetype.csv": "CSV Datei",
        "filetype.session": "Telethon Session",
        "filetype.all": "Alle Dateien",
        "error.missing_title": "Fehlende Eingaben",
        "error.missing_body": "Bitte alle Felder ausfüllen.",
        "error.api_id_title": "Ungültige API ID",
        "error.api_id_body": "TELEGRAM_API_ID muss eine Zahl sein.",
        "error.api_hash_title": "Ungültiger API-Hash",
        "error.api_hash_body": "Bitte den 32-stelligen API-Hash von my.telegram.org/apps eingeben (nur Hex-Zeichen).",
        "error.api_creds_title": "Ungültige API-Zugangsdaten",
        "error.api_creds_body": "Die Kombination aus API ID und API-Hash ist ungültig. Prüfe, dass die API ID stimmt und der API-Hash exakt von my.telegram.org/apps kopiert wurde.",
        "error.chat_invalid_title": "Chat nicht gefunden",
        "error.chat_invalid_body": "Bitte einen gültigen Chat-/Kanal-Namen, Invite-Link oder internen Link angeben.",
        "login.code_title": "Telegram Bestätigung",
        "login.code_body": "Bitte den per Telegram erhaltenen Code eingeben:",
        "login.password_title": "Zwei-Faktor Passwort",
        "login.password_body": "Bitte Dein Telegram-Passwort eingeben:",
        "status.starting": "Starte Export…",
        "status.logging_in": "Anmeldung…",
        "status.validating": "API-Zugangsdaten werden geprüft…",
        "status.valid_ok": "API-Zugangsdaten OK.",
        "status.exporting_members": "Mitglieder werden exportiert…",
        "status.done": "Fertig.",
        "log.using_creds": "Verwende api_id={api_id}, api_hash={api_hash}, phone={phone}",
        "log.member_summary": "Mitglieder: {total}, Bots: {bots}, Recent: {recent}",
        "log.renamed_output": "Ausgabedatei umbenannt zu {path}",
        "log.rename_failed": "Ausgabedatei konnte nicht umbenannt werden: {error}",
        "status.error_title": "Fehler",
        "status.error_short": "Fehler.",
        "progress.captured": "{count} Nutzer erfasst…",
        "progress.collecting": "Teilnehmer werden gesammelt...",
        "progress.participants": "Teilnehmer erfasst: {count}",
        "progress.bots": "Bots gezählt: {count}",
        "progress.bots_missing": "Bots lassen sich ohne ausreichende Rechte nicht zählen.",
        "progress.recent": "Kürzlich aktive Teilnehmer gezählt: {count}",
        "progress.recent_missing": "Recent-Teilnehmer lassen sich ohne ausreichende Rechte nicht ermitteln.",
        "progress.fallback": "Keine Teilnehmer via API; Nachrichten-Fallback wird genutzt...",
        "progress.scanning": "Nachrichtenaktivität wird gescannt...",
        "progress.messages_scanned": "Nachrichten gescannt: {count}",
        "progress.activity_done": "Aktivitätsscan nach {count} Nachrichten abgeschlossen",
        "progress.saved_csv": "CSV gespeichert: {path}",
        "progress.chat_title": "Chat-Name erkannt: {name}",
        "header.username": "Username",
        "header.is_bot": "Ist Bot",
        "header.last_seen": "Zuletzt gesehen",
        "bot.yes": "Ja",
        "bot.no": "Nein",
        "seen.online": "Online",
        "seen.recently": "Kürzlich",
        "seen.hidden": "Versteckt/Nicht geteilt",
        "seen.unknown": "Unbekannt",
    },
}


def detect_lang_from_env() -> str:
    lang = os.getenv("LANG", "en").lower()
    if lang.startswith("de"):
        return "de"
    return "en"


def tr(lang: str, key: str, **kwargs) -> str:
    base = I18N.get(lang, {})
    txt = base.get(key)
    if txt is None:
        txt = I18N["en"].get(key, key)
    try:
        return txt.format(**kwargs)
    except Exception:
        return txt
